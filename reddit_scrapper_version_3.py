# -*- coding: utf-8 -*-
"""Reddit Scrapper Version 3.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1fczEaWaU6QMWTRh8CP6U10gTWT-7YdZW
"""

# Install required library
!pip install praw

# Import necessary libraries
import praw
import pandas as pd
import re
from datetime import datetime, timedelta

# Initialize Reddit instance
reddit = praw.Reddit(client_id="3fXfFslCainOY6xM4Zm0Ng",
                     client_secret="1Zxte6SguEhBrtYAJirOBI7kbwV3yQ",
                     user_agent="name")

# Ask user for keywords to search
keywords = input("Enter keywords to search (comma-separated): ").split(',')

# Define list to store post data
data = []

# Get the timestamp for 6 months ago
six_months_ago = datetime.utcnow() - timedelta(days=180)
six_months_timestamp = int(six_months_ago.timestamp())

# Function to clean post text (remove external links & excessive whitespace)
def clean_text(text):
    text = re.sub(r'http\S+', '', text)  # Remove URLs
    text = re.sub(r'\s+', ' ', text).strip()  # Remove excessive whitespace
    return text

# Function to check if the URL is a Reddit link
def filter_reddit_links(url):
    return url if "reddit.com" in url else "N/A"

# Search Reddit for keyword-matching posts (past year, then filter)
for keyword in keywords:
    keyword = keyword.strip()
    print(f"Searching for: {keyword}...")

    # Fetch posts from past year
    for post in reddit.subreddit("all").search(keyword, sort="top", time_filter="year", limit=200):

        # Filter posts from last 6 months
        if post.created_utc >= six_months_timestamp:
            data.append({
                'Post ID': post.id,
                'Title': post.title.strip(),
                'Author': post.author.name if post.author else 'Unknown',
                'Timestamp': pd.to_datetime(post.created_utc, unit='s'),
                'Text': clean_text(post.selftext),  # Cleaned text (no links)
                'Score': post.score,
                'Total Comments': post.num_comments,
                'Post URL': filter_reddit_links(post.url)  # Keep only Reddit URLs
            })

# Convert to pandas DataFrame
reddit_posts = pd.DataFrame(data)

# Save to CSV with proper formatting
reddit_posts.to_csv("reddit_posts_cleaned.csv", index=False, encoding='utf-8')

print("Scraping complete! Data saved as 'reddit_posts_cleaned.csv'.")